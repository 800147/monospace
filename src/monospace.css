:root {
  /* https://github.com/system-fonts/modern-font-stacks?tab=readme-ov-file#monospace-code */
  --font-family: "Cascadia Code", "Source Code Pro", Menlo, Consolas,
    "DejaVu Sans Mono", monospace;
  --font: 600 16px/20px var(--font-family);
  --bgcolor: #fff;
  --color: #555;

  font: var(--font);
  background-color: var(--bgcolor);
  color: var(--color);
  display: grid;
  grid-template-columns: repeat(auto-fill, 1ch);
  max-width: 80ch;
  padding: 0 calc(50% - 41ch);
  border-left: 1ch solid transparent;
  border-right: 1ch solid transparent;
}

@media (prefers-color-scheme: dark) {
  :root {
    --bgcolor: #000;
    --color: #aaa;
  }
}

body {
  grid-column-start: 1;
  grid-column-end: -1;
  overflow-wrap: anywhere;
  word-break: normal;
  margin: 0;
  position: relative;
}

main {
  display: contents;
}

/* Headings */

h1,
h2,
h3,
h4,
h5,
h6 {
  font: var(--font);
  max-width: max-content;
  margin: 2lh 0 1lh;
}

h4 {
  padding: 0 3ch;
}

h5 {
  padding: 0 3ch 0 5ch;
}

h6 {
  padding: 0 3ch 0 7ch;
}

h1 {
  position: relative;
  line-height: 2.5;
  padding: 0.75lh 3ch;
  margin: 0.5lh 0;
  overflow: hidden;
  overflow: clip;
  text-transform: uppercase;
}

h1::before {
  display: block;
  pointer-events: none;
  position: absolute;
  inset: 0lh 1ch 0lh 0ch;
  overflow: hidden;
  overflow: clip;
  content: "/================================================================================\A\\\A/\A\\\A/\A\\\A/\A\\\A/\A\\\A/\A\\\A/\A\\\A/\A\\\A/\A\\";
  white-space: pre;
  font: var(--font);
}

h1::after {
  display: block;
  pointer-events: none;
  position: absolute;
  inset: auto 0ch 0lh 1ch;
  overflow: hidden;
  overflow: clip;
  content: "\\\A/\A\\\A/\A\\\A/\A\\\A/\A\\\A/\A\\\A/\A\\\A/\A\\\A/\A\\\A/================================================================================";
  white-space: pre;
  direction: rtl;
  font: var(--font);
}

h2,
h3 {
  position: relative;
  padding: 0 0 1lh;
  margin-left: 3ch;
  margin-right: 3ch;
}

h2::after,
h3::after {
  display: block;
  pointer-events: none;
  position: absolute;
  height: 1lh;
  left: 0ch;
  overflow: hidden;
  overflow: clip;
}

h2::after {
  content: "================================================================================";
}

h3::after {
  content: "−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−";
}

/* Paragraph */

p {
  margin: 1lh 0;
}

/* Lists */

:is(ul, ol) {
  padding-left: 5ch;
  margin: 1lh 0;
}

:is(ul, ol) :is(ul, ol) {
  padding-left: 3ch;
  margin: 0;
}

ul {
  list-style: "* ";
}

ul ul {
  list-style-type: "− ";
}

/* Horizontal line */

hr {
  border: none;
  margin: 2lh 0 1lh;
  padding: 0 7ch;
  color: var(--color);
}

hr::before {
  content: "−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−";
  content: "********************************************************************************";
  overflow: hidden;
  white-space: nowrap;
  display: block;
  pointer-events: none;
  width: 100%;
}

/* Button */

button,
.Button {
  appearance: none;
  background-color: #0aa;
  display: inline-block;
  text-decoration: none;
  border: none;
  font: var(--font);
  color: #000;
  padding: 0 2ch;
  margin: 0;
  text-align: left;
  position: relative;
}

:is(button, .Button)::before {
  content: "< ";
  display: block;
  pointer-events: none;
  position: absolute;
  top: 0;
  left: 0;
}

:is(button, .Button)::after {
  content: " >";
  display: block;
  pointer-events: none;
  position: absolute;
  bottom: 0;
  right: 0;
}

/* Code */

pre {
  position: relative;
  overflow-x: auto;
  overflow-y: hidden;
  font: var(--font);
  margin: 1lh 0;
  color: #0a0;
}

@media (prefers-color-scheme: dark) {
  pre {
    color: #0a0;
  }
}

pre > code {
  display: block;
  pointer-events: none;
  padding-left: 4ch;
  overflow: hidden;
  width: max-content;
  position: relative;
}

pre > code::before {
  content: "01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|";
  display: block;
  pointer-events: none;
  width: 3ch;
  white-space: normal;
  word-break: break-all;
  position: absolute;
  top: 0;
  left: 0;
  color: #afa;
}

@media (prefers-color-scheme: dark) {
  pre > code::before {
    color: #050;
  }
}

code {
  font: var(--font);
}

/* Table */

table {
  border-spacing: 0;
  position: relative;
  margin: 1lh 0;
  empty-cells: show;
  width: max-content;
  overflow: hidden;
  overflow: clip;
  padding-right: 1ch;
}

table::before {
  content: "|\A|\A|\A|\A|\A|\A|\A|\A|\A|\A|\A|\A|\A|\A|\A|\A|\A|\A|\A|\A|\A|\A|\A|\A|\A|\A|\A|\A|\A|";
  display: block;
  pointer-events: none;
  white-space: pre;
  position: absolute;
  top: 0;
  bottom: 1lh;
  right: 0;
  overflow: hidden;
  z-index: -1;
}

table::after {
  content: "+";
  display: block;
  pointer-events: none;
  position: absolute;
  bottom: 0;
  right: 0;
}

tr {
  padding-right: 1ch;
}

tr::after {
  content: "+";
  pointer-events: none;
  position: absolute;
  background-color: var(--bgcolor);
}

:is(th, td) {
  text-align: left;
  position: relative;
  padding: 1lh 1ch 0 2ch;
  overflow: hidden;
  font: var(--font);
  vertical-align: top;
}

:is(th, td)::before {
  display: block;
  pointer-events: none;
  position: absolute;
  top: 0lh;
  right: 0ch;
  bottom: 0lh;
  left: 0ch;
  overflow: hidden;
  overflow: clip;
  content: "+−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−\A|\A|\A|\A|\A|\A|\A|\A|";
  white-space: pre;
}

:is(th, td):not(thead *):is(tr:last-child > *) {
  padding-bottom: 1lh;
}

:is(th, td):not(thead *):is(tr:last-child > *)::before {
  bottom: 1lh;
}

:is(th, td):not(thead *):is(tr:last-child > *)::after {
  display: block;
  pointer-events: none;
  position: absolute;
  right: 0ch;
  bottom: 0lh;
  left: 0ch;
  overflow: hidden;
  overflow: clip;
  content: "+−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−";
  white-space: pre;
  text-align: right;
}

/* Figure */

figure {
  position: relative;
  padding: 2lh 3ch;
  overflow: hidden;
  margin: 1lh 0;
  width: max-content;
  max-width: 100%;
  box-sizing: border-box;
}

figure::before {
  display: block;
  pointer-events: none;
  position: absolute;
  top: 0lh;
  right: 1ch;
  bottom: 0lh;
  left: 0ch;
  overflow: hidden;
  overflow: clip;
  content: "+−−−−−−\A|\A|";
  white-space: pre;
}

figure::after {
  display: block;
  pointer-events: none;
  position: absolute;
  right: 0ch;
  bottom: 0lh;
  left: 1ch;
  overflow: hidden;
  overflow: clip;
  content: "|\A|\A+−−−−−−";
  white-space: pre;
  direction: rtl;
}

/* Quote */

blockquote {
  position: relative;
  padding: 0lh 2ch 0lh 3ch;
  overflow: hidden;
  margin: 1lh 0;
}

blockquote::before {
  display: block;
  pointer-events: none;
  position: absolute;
  top: 0lh;
  bottom: 0lh;
  left: 1ch;
  overflow: hidden;
  overflow: clip;
  content: ">\A>\A>\A>\A>\A>\A>\A>\A>\A>\A>\A>\A>\A>\A>";
  white-space: pre;
}

/* Image */

img {
  max-width: 100%;
  height: auto;
}

/* Form controls */

input[type="checkbox"],
input[type="radio"] {
  font: var(--font);
  appearance: none;
  margin: 0 1ch 0 0;
  padding: 0;
  width: 3ch;
}
input[type="checkbox"]::before {
  color: var(--color);
  content: "[ ]";
}
input[type="checkbox"]:checked::before {
  content: "[*]";
}
input[type="checkbox"]:indeterminate::before {
  content: "[−]";
}
input[type="radio"]::before {
  color: var(--color);
  content: "( )";
}
input[type="radio"]:checked::before {
  content: "(*)";
}

/* Cursor */

#cursor {
  position: absolute;
  top: 0;
  left: 0;
  width: 1ch;
  height: 1lh;
  pointer-events: none;
  backdrop-filter: var(--custom-cursor-switch) invert(100%);
  -webkit-backdrop-filter: var(--custom-cursor-switch) invert(100%);
  transform: var(--custom-cursor-switch)
    translate(calc(var(--cursorX) - 0.5ch), calc(var(--cursorY) - 0.5lh));
}

@supports (top: round(100%, 1lh)) {
  #cursor {
    transform: var(--custom-cursor-switch)
      translate(
        round(down, var(--cursorX), 1ch),
        round(down, var(--cursorY), 1lh)
      );
    z-index: 9999;
  }
}

body {
  cursor: var(--custom-cursor-switch) none;
}

body * {
  cursor: var(--custom-cursor-switch) unset;
}
